buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "gradle.plugin.com.stehno:gradle-natives:0.3.0"
    }
}

apply plugin: "com.stehno.natives"


allprojects {
    task wrapper(type: Wrapper) {
        gradleVersion = '3.2'
    }

    buildscript {
        repositories {
            maven {
                url "https://plugins.gradle.org/m2/"
            }
            mavenLocal()
            mavenCentral()
            jcenter()
        }
    }

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'distribution'

    repositories {
        mavenCentral()
    }

    dependencies {
        compile group: 'com.esotericsoftware', name: 'kryo', version: '4.0.0'
        compile group: 'com.esotericsoftware', name: 'kryonet', version: '2.22.0-RC1'
        compile group: 'org.l33tlabs.twl', name: 'pngdecoder', version: '1.0'
        compile group: 'com.miglayout', name: 'miglayout-swing', version: '5.0'
        compile group: 'org.lwjgl.lwjgl', name: 'lwjgl', version: '2.9.1'
        compile group: 'org.lwjgl.lwjgl', name: 'lwjgl_util', version: '2.9.1'

        compile fileTree(dir: 'src/main/resources/lib', include: ['*.jar'])
        compile fileTree(dir: 'src/main/resources/lib/launcher', include: ['*.jar'])
    }
}

project(':core') {
    natives {
        outputDir = 'native/libs'
    }

    jar {
        baseName 'Mace-Swinger'
        manifest {
            attributes 'Main-Class': 'uk.co.pbellchambers.maceswinger.client.GameClient'
        }

        from {
            configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        }
    }
}

project(':launcher') {
    dependencies {
        compile project(':core')
    }

    jar {
        manifest {
            attributes 'Main-Class': 'uk.co.pbellchambers.maceswinger.launcher.MainFrame'
        }

        from {
            configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        }
    }
}

project(':leveldesigner') {
    dependencies {
        compile project(':core')
    }

    jar {
        manifest {
            attributes 'Main-Class': 'uk.co.pbellchambers.maceswinger.leveldesigner.Main'
        }

        from {
            configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        }
    }
}

task copyCoreModule(type: Copy) {
    from 'core/build/classes/main/uk/co/pbellchambers/maceswinger/core'
    into 'build/modules/modules/core'
}

task copyModuleResources(type: Copy) {
    from 'modules'
    into 'build/modules/modules'
}

task copyNativeLibraries(type: Copy) {
    from 'build/libs/libs'
    into 'libs'
}

distributions {
    maceSwinger {
        baseName = 'Mace-Swinger'
        contents {
            from { 'core/build/libs' }
            from { 'launcher/build/libs' }
            from { 'leveldesigner/build/libs' }
            from { 'build/modules' }
            from { 'build/native' }
        }
    }
}

includeNatives.dependsOn 'jar'
copyNativeLibraries.dependsOn 'includeNatives'
copyModuleResources.dependsOn 'copyNativeLibraries'
copyCoreModule.dependsOn 'copyModuleResources'
maceSwingerDistZip.dependsOn 'copyCoreModule'